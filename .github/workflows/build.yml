#
# Copyright 2012-2020 The Feign Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.
#
name: Build

on:
  push:
    branches:
      - master
    tags:
      - '*'  # Runs on all new tags
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Cache local Maven repository
        uses: actions/cache@v3
        continue-on-error: true
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ matrix.language }} ${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ matrix.language }}
            ${{ runner.os }}-maven-

      - name: Cache SDKMAN JDKs
        uses: actions/cache@v4
        with:
          path: ~/.sdkman
          key: sdkman-java-${{ runner.os }}-${{ hashFiles('~/.m2/toolchains.xml') }}
          restore-keys: sdkman-java-${{ runner.os }}-

      - name: Install SDKMAN!
        run: |
          if [ ! -d "$HOME/.sdkman" ]; then
            curl -s "https://get.sdkman.io" | bash
          fi
          source "$HOME/.sdkman/bin/sdkman-init.sh"

      - name: Install JDKs (8, 11, 17, 21)
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          jdk_versions=("8.0.382-tem" "11.0.22-tem" "17.0.10-tem" "21.0.2-tem")
          for jdk_version in "${jdk_versions[@]}"; do
            if [ ! -d "$HOME/.sdkman/candidates/java/$jdk_version" ]; then
              yes n | sdk install java "$jdk_version"
            fi
          done
          sdk default java 21.0.2-tem

      - name: Configure Maven Toolchain
        run: |
          mkdir -p ~/.m2
          cp .github/files/toolchains.xml ~/.m2/toolchains.xml

      - name: Download dependencies only
        run: ./mvnw -ntp -B org.apache.maven.plugins:maven-dependency-plugin:3.8.1:go-offline de.qaware.maven:go-offline-maven-plugin:1.2.8:resolve-dependencies -fn

      - name: Build
        run: ./mvnw -ntp -B clean install

      - name: Verify formatting
        run: scripts/no-git-changes.sh

      - name: Nexus deploy
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: |
          cp .github/files/settings.xml ~/.m2/settings.xml
          echo -e "$GPG_KEY" | gpg --batch --no-tty --import --yes
          ./mvnw -ntp -nsu -P release -pl -:feign-benchmark -DskipTests=true deploy -T1
